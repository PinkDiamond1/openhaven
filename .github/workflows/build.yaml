name: continuous-integration/gh-actions/open-haven

on: [push, pull_request]

jobs:
  build-open-haven:
    env:
      ZMQ_VERSION: v4.3.1
      CPPZMQ_VERSION: v4.3.0
      CFLAGS: -fPIC
      CXXFLAGS: -fPIC
      NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v1
      with:
        submodules: recursive
    - name: remove bundled boost
      run: sudo rm -rf /usr/local/share/boost
    - name: set apt conf
      run: |
        echo "Acquire::Retries \"3\";" | sudo tee -a /etc/apt/apt.conf.d/80-custom
        echo "Acquire::http::Timeout \"120\";" | sudo tee -a /etc/apt/apt.conf.d/80-custom
        echo "Acquire::ftp::Timeout \"120\";" | sudo tee -a /etc/apt/apt.conf.d/80-custom
    - name: Install Haven dependencies
      run: |
        sudo apt update
        sudo apt-get --no-install-recommends --yes install python3 build-essential cmake pkg-config libboost-all-dev libunwind-dev libcurl3-dev libssl-dev libunbound-dev libsodium-dev liblzma-dev libreadline6-dev libldns-dev libexpat1-dev doxygen graphviz libpgm-dev libudev-dev libmysql++-dev
        sudo update-alternatives --install /usr/bin/python python /usr/bin/python3 10
    - name: Install libzmq
      run: |
        git clone https://github.com/zeromq/libzmq.git -b ${ZMQ_VERSION}
        cd libzmq
        ./autogen.sh
        ./configure
        make -j3
        sudo make install
        sudo ldconfig
    - name: Install cppzmq
      run: |
        git clone https://github.com/zeromq/cppzmq.git -b ${CPPZMQ_VERSION}
        cd cppzmq
        sudo mv *.hpp /usr/local/include


    - name: Compile Haven
      run: |
        git clone --recurse-submodules https://github.com/haven-protocol-org/haven-main.git 
        cd haven-main
        mkdir -p build/release && cd build/release
        cmake -D CMAKE_BUILD_TYPE=Release ../..
        cmake --build . --target cryptonote_core -- -j 2
        cd ../..

    - name: Get openhaven submodules
      run: |
        git submodule update --init --recursive

    - name: Creating Build Files 
      run: 'cmake -DMONERO_DIR=/home/runner/work/openhaven/openhaven/haven-main -DBUILD_TESTS=OFF -H. -Bbuild'
      
    - name: Creating Binary Files
      run: 'cmake --build build -- -j 2'

    
    
